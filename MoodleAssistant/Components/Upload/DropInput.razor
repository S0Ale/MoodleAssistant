@implements IAsyncDisposable
@rendermode InteractiveServer
@inject IJSRuntime Js

<div class="file-input-item w-full" id="@InputName">
    @for (var i = 1; i <= MaxFiles; i++){
        <CustomLabel IsVisible="@(_current == i)" OnChange="UploadFile" InputName="@InputName" MaxFiles="@MaxFiles" UploadedFiles="UploadedFiles" 
                     id="@($"{InputName}-{i}")">
            @ChildContent
            <p class="text-inherit">File limit: @MaxFiles</p>
            <p class="text-inherit">Max size: @(MaxSize / 1000000) MB</p>
        </CustomLabel>
    }
    @if (_current > MaxFiles){
        <div class="min-w-64 py-10 px-6 w-full drop-zone">
            <span class="flex flex-col items-center text-gray-500">
                <p class="text-inherit">File limit reached.</p>
            </span>
        </div>
    }
    <div class="mt-1 flex flex-col flex-wrap bg-transparent preview-container">
        @foreach (var filePair in UploadedFiles){
            <InputPreview FileName="@filePair.Value.Name" OnClose="() => RemoveFile(filePair.Key)"/>
        }
    </div>
</div>