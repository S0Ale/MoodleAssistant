@page "/Replicator"
@using MoodleAssistant.Components.Upload
@using MoodleAssistant.Services
@using MoodleAssistant.Components.Sections
@using MoodleAssistant.Logic.Utils
@inject ReplicatorState ReplicatorState;
@inject IBrowserFileService FileService;
@inject IJSRuntime Js;
@inject ILogger<Replicator> Logger;

@{
    var mainForm = "main-upload";
}

<PageTitle>Replicator</PageTitle>
<div id="content" class="pt-8 pb-8">
    <div class="flex items-center justify-center mx-auto">
        <div>
            <p class="mb-6 text-center">Here you can upload your XML and CSV files:</p>
            <form method="post" id="@(mainForm)" @formname="main-upload" @onsubmit="Submit">
                <AntiforgeryToken />
                <div class="flex flex-col space-y-3 md:space-y-0 md:space-x-3 md:flex-row">
                    <DropInput @ref="_xmlInput" InputName="xml-input">
                        <p class="text-inherit">Drop XML here, or <span class="text-blue-500 underline ml-[4px]">browse</span>.</p>
                    </DropInput>
                    <DropInput @ref="_csvInput" InputName="csv-input">
                        <p class="text-inherit">Drop CSV here, or <span class="text-blue-500 underline ml-[4px]">browse</span>.</p>
                    </DropInput>
                </div>
                <div class="flex flex-row mt-3">
                    <button type="submit" class="btn btn-primary py-1.5 px-6" @onclick="() => _isUploading = true" data-testid="main-submit">Upload</button>
                    <button type="button" class="btn btn-secondary py-1.5 px-6 ml-3" id="clear-files" @onclick="ClearForm">Clear</button>
                </div>
                <div class="error-container">
                    <Message @ref="_dialog" MsgText="@(ErrorMessage.GetErrorMessage(ErrorMsg))" Type="MessageType.Error" CanClose="true"/>
                    @if (_isUploading){
                        <Message MsgText="Uploading..." Type="MessageType.Info" CanClose="false"/>
                    }
                    @if (_successfulUpload){
                        <Message MsgText="Files uploaded successfully." Type="MessageType.Success" CanClose="true"/>
                    }
                </div>
            </form>
        </div>
    </div>
</div>
@if (_successfulUpload){
    <Analysis />
    @if (_showFileParams){
        <FileParam OnSuccess="(value) => _showDownload = value" />
    }
    @if (_showDownload){
        <Preview />
    }

    <div class="flex flex-row justify-center py-6 border-t border-zinc-200">
        @if (_showDownload){
            <button class="btn btn-primary py-1.5 px-5 mr-4" @onclick="Download" data-testid="download">Download</button>
        }
        <button class="btn btn-secondary py-1.5 px-5" @onclick="Reset" data-testid="reset">Reset</button>
    </div>
}